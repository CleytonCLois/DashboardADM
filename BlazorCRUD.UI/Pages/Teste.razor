@page "/Teste"

@using Model
@using Interfaces
@inject HttpClient https
@inject IGraficoServico GraficoServico
@inject IPrefeituraServico PrefeituraServico
@inject IConfiguracaoServico ConfiguracaoServico
@inject NavigationManager navigationManager

@if (grafico == null)
{
    <div class="loading">
        <img src="imgLoading.png" style="display: block; margin-left: auto; margin-right: auto">
        <RadzenProgressBar Value="100" ShowValue="false" Mode="ProgressBarMode.Indeterminate" Style="margin-bottom: 20px; align-self: center;" />
        <h3 style=" align-self: center;">Aguarde até carregar todos os dados.</h3>
    </div>
}
else
{

    <div class="row">
        <div class="col-md-9">
            <div class="card">
                <h5 class="card-header">Lista Top Prefeituras</h5>
                <div class="card-body">
                    <RadzenChart>
                        <RadzenColumnSeries Fill="#f27724" Data="@grafico" CategoryProperty="texto" LineType="LineType.Dotted" ValueProperty="valores">
                        </RadzenColumnSeries>
                        <RadzenCategoryAxis Visible="false"><RadzenTicks Stroke="#141b23" StrokeWidth="2" /></RadzenCategoryAxis>
                        <RadzenLegend Visible="false"></RadzenLegend>
                        <RadzenColumnOptions Margin="0" />
                    </RadzenChart>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card">
                <h5 class="card-header">Lista de prefeituras atualizadas</h5>
                <div class="card-body">
                    <MudCarousel Style="height:300px;" TData="Grafico" ShowArrows="false" ShowDelimiters="false" AutoCycle="true">
                        @foreach (var item in grafico)
                        {
                            <MudCarouselItem Transition="Transition.Slide" Color="@Color.Primary">
                                <div class="row">
                                    <div class="col-md-6">
                                        <b>Prefeitura:</b>
                                        <div>@item.texto</div>
                                        <div style="margin-top:20px; width:600px"><b>Nº de notas emitidas:</b></div>
                                        <div>@(item.valores.ToString())</div>
                                        <br />
                                        @*<RadzenImage Path="" Style="width:10px;" />*@
                                        <RadzenImage Path="@teste(item.logo)" Style="width:600px" />
                                    </div>
                                </div>
                            </MudCarouselItem>
                        }
                    </MudCarousel>
                </div>
            </div>
        </div>
    </div>
}

@code {
    IEnumerable<Prefeitura> filtro;

    IEnumerable<Grafico> grafico;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            grafico = await GraficoServico.TopPrefeituras();
        }
        catch (Exception e)
        {
            throw;
        }
    }

    public string teste(byte[] teste) {
        var base64 = Convert.ToBase64String(teste);
        var imgSrc = String.Format("data:image/jpeg;base64,{0}", base64);

        return imgSrc;
    }
}
