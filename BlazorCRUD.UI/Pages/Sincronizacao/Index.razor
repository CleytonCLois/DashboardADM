@page "/"

@using Model
@using Interfaces
@inject HttpClient https
@inject IGraficoServico GraficoServico
@inject IPrefeituraServico PrefeituraServico
@inject IConfiguracaoServico ConfiguracaoServico
@inject NavigationManager navigationManager

@if (prefeituras == null)
{
    <div class="loading">
        <img src="imgLoading.png" style="display: block; margin-left: auto; margin-right: auto">
        <RadzenProgressBar Value="100" ShowValue="false" Mode="ProgressBarMode.Indeterminate" Style="margin-bottom: 20px; align-self: center;" />
        <h3 style=" align-self: center;">Aguarde até carregar todos os dados.</h3>
    </div>
}
else
{
    <meta HTTP-EQUIV="REFRESH" CONTENT="3600">
    <div class="row" style="border: 25px solid transparent; text-align: center; font-size: large;">
        <div class="cpanel cpanel-blue">
            <div class="icon-part">
                <i class="fas fa-check" aria-hidden="true"></i><br>
                <small>Prefeituras atualizadas</small>
                <p>@prefeiturasAtualizadasCount</p>
            </div>
            <div class="card-content-part">
                <a href="PrefeiturasAtualizadas">Mais Detalhes +</a>
            </div>
        </div>
        <div class="cpanel cpanel-green">
            <div class="icon-part">
                <i class="fas fa-clock" aria-hidden="true"></i><br>
                <small>Prefeituras atualizadas nas últimas 24hrs</small>
                <p>@prefeiturasAtualizadasUltimas24hrsCount</p>
            </div>
            <div class="card-content-part">
                <a href="PrefeiturasAtualizadas24hrs">Mais Detalhes +</a>
            </div>
        </div>
        <div class="cpanel cpanel-orange">
            <div class="icon-part">
                <i class="fas fa-exclamation-circle" aria-hidden="true"></i><br>
                <small>Prefeituras desatualizadas</small>
                <p>@prefeiturasDesatualizadasCount</p>
            </div>
            <div class="card-content-part">
                <a href="PrefeiturasDesatualizadas">Mais Detalhes + </a>
            </div>
        </div>
        <div class="cpanel cpanel-red">
            <div class="icon-part">
                <i class="fas fa-times-circle" aria-hidden="true"></i><br>
                <small>Prefeituras desatualizadas a mais de 24Hrs</small>
                <p>@prefeiturasDesatualizadasMaisDeUmaSemanaCount</p>
            </div>
            <div class="card-content-part">
                <a href="PrefeiturasDesatualizadasMaisDeUmaSemana">Mais Detalhes + </a>
            </div>
        </div>
    </div>
    <MudCarousel Style="font-size: x-large; height: 75vh;" TData="Grafico" ShowArrows="false" ShowDelimiters="false" AutoCycle="true" AutoCycleTime="@interval">
        <MudCarouselItem Transition="Transition.Slide" Color="@Color.Primary">
            <div class="col-md-12">
                <div class="card" style="height: 75vh;">
                    <h5 class="card-header">Gráfico de Status da Sincronização</h5>
                    <div class="card-body">
                        <RadzenChart Style="height:50vh;">
                            <RadzenPieSeries Data="@graficoCircularPrefeiturasDesatualizadas" Title="Quantidade" CategoryProperty="texto" ValueProperty="valores" />
                        </RadzenChart>
                    </div>
                </div>
            </div>
        </MudCarouselItem>
        <MudCarouselItem Transition="Transition.Slide" Color="@Color.Primary">
            <div class="col-md-12">
                <div class="card" style="height: 75vh; color: white">
                    <h5 class="card-header" style="background-color: #015b97">Lista de Prefeituras Atualizadas</h5>
                    <div class="card-body" style="background-color: #0479cc">
                        <RadzenDataGrid Data=@prefeiturasAtualizadas FilterMode="FilterMode.Simple" AllowFiltering="true" AllowPaging="true" AllowSorting="true" TItem="Prefeitura" PageSize="12">
                            <Columns>
                                <RadzenDataGridColumn TItem="Prefeitura" Property="id" Title="ID">
                                    <FooterTemplate>
                                        Quantidade total de prefeituras: <b>@prefeiturasAtualizadas.Count()</b>
                                    </FooterTemplate>
                                </RadzenDataGridColumn>
                                <RadzenDataGridColumn TItem="Prefeitura" Property="nomePrefeitura" Title="Nome da Prefeitura" />
                                <RadzenDataGridColumn TItem="Prefeitura" Property="ultimaAtualizacao" Title="Última Atualização">
                                    <FooterTemplate>
                                        Data mais desatualizada: <b>@String.Format("{0:d}", prefeiturasAtualizadas.OrderByDescending(o => o.ultimaAtualizacao).Last().ultimaAtualizacao)</b>
                                    </FooterTemplate>
                                </RadzenDataGridColumn>
                            </Columns>
                        </RadzenDataGrid>
                    </div>
                </div>
            </div>
        </MudCarouselItem>
        <MudCarouselItem Transition="Transition.Slide" Color="@Color.Primary">
            <div class="col-md-12">
                <div class="card" style="height: 75vh; color: white">
                    <h5 class="card-header" style="background-color: #3ec0af">Lista de Prefeituras Atualizadasa nas últimas 24Hrs</h5>
                    <div class="card-body" style="background-color: #68d5c8">
                        <RadzenDataGrid Data=@prefeiturasAtualizadas24hrs FilterMode="FilterMode.Simple" AllowFiltering="true" AllowPaging="true" AllowSorting="true" TItem="Prefeitura" PageSize="12">
                            <Columns>
                                <RadzenDataGridColumn TItem="Prefeitura" Property="id" Title="ID">
                                    <FooterTemplate>
                                        Quantidade total de prefeituras: <b>@prefeiturasAtualizadas24hrs.Count()</b>
                                    </FooterTemplate>
                                </RadzenDataGridColumn>
                                <RadzenDataGridColumn TItem="Prefeitura" Property="nomePrefeitura" Title="Nome da Prefeitura" />
                                <RadzenDataGridColumn TItem="Prefeitura" Property="ultimaAtualizacao" Title="Última Atualização">
                                    <FooterTemplate>
                                        Data mais desatualizada: <b>@String.Format("{0:d}", prefeiturasAtualizadas24hrs.OrderByDescending(o => o.ultimaAtualizacao).Last().ultimaAtualizacao)</b>
                                    </FooterTemplate>
                                </RadzenDataGridColumn>
                            </Columns>
                        </RadzenDataGrid>
                    </div>
                </div>
            </div>
        </MudCarouselItem>
        <MudCarouselItem Transition="Transition.Slide" Color="@Color.Primary">
            <div class="col-md-12">
                <div class="card" style="height: 75vh; color: white">
                    <h5 class="card-header" style="background-color: #dd4a21">Lista de Prefeituras Desatualizadas</h5>
                    <div class="card-body" style="background-color: #ff6d41">
                        <RadzenDataGrid Data=@prefeiturasDesatualizadas FilterMode="FilterMode.Simple" AllowFiltering="true" AllowPaging="true" AllowSorting="true" TItem="Prefeitura" PageSize="12">
                            <Columns>
                                <RadzenDataGridColumn TItem="Prefeitura" Property="id" Title="ID">
                                    <FooterTemplate>
                                        Quantidade total de prefeituras: <b>@prefeiturasDesatualizadas.Count()</b>
                                    </FooterTemplate>
                                </RadzenDataGridColumn>
                                <RadzenDataGridColumn TItem="Prefeitura" Property="nomePrefeitura" Title="Nome da Prefeitura" />
                                <RadzenDataGridColumn TItem="Prefeitura" Property="ultimaAtualizacao" Title="Última Atualização">
                                    <FooterTemplate>
                                        Data mais desatualizada: <b>@String.Format("{0:d}", prefeiturasDesatualizadas.OrderByDescending(o => o.ultimaAtualizacao).Last().ultimaAtualizacao)</b>
                                    </FooterTemplate>
                                </RadzenDataGridColumn>
                            </Columns>
                        </RadzenDataGrid>
                    </div>
                </div>
            </div>
        </MudCarouselItem>
        <MudCarouselItem Transition="Transition.Slide" Color="@Color.Primary">
            <div class="col-md-12">
                <div class="card" style="height: 75vh; color: white">
                    <h5 class="card-header" style="background-color: #bc4275">Lista de Prefeituras Desatualizadas a mais de uma Semana</h5>
                    <div class="card-body" style="background-color: #cb6992">
                        <RadzenDataGrid Data=@prefeiturasDesatualizadasMaisDeUmaSemana FilterMode="FilterMode.Simple" AllowFiltering="true" AllowPaging="true" AllowSorting="true" TItem="Prefeitura" PageSize="12">
                            <Columns>
                                <RadzenDataGridColumn TItem="Prefeitura" Property="id" Title="ID">
                                    <FooterTemplate>
                                        Quantidade total de prefeituras: <b>@prefeiturasDesatualizadasMaisDeUmaSemana.Count()</b>
                                    </FooterTemplate>
                                </RadzenDataGridColumn>
                                <RadzenDataGridColumn TItem="Prefeitura" Property="nomePrefeitura" Title="Nome da Prefeitura" />
                                <RadzenDataGridColumn TItem="Prefeitura" Property="ultimaAtualizacao" Title="Última Atualização">
                                    <FooterTemplate>
                                        Data mais desatualizada: <b>@String.Format("{0:d}", prefeiturasDesatualizadasMaisDeUmaSemana.OrderByDescending(o => o.ultimaAtualizacao).Last().ultimaAtualizacao)</b>
                                    </FooterTemplate>
                                </RadzenDataGridColumn>
                            </Columns>
                        </RadzenDataGrid>
                    </div>
                </div>
            </div>
        </MudCarouselItem>
    </MudCarousel>
}

@code {

    TimeSpan interval = new TimeSpan(00, 00, 15);

    private IEnumerable<Prefeitura> prefeituras;
    List<Prefeitura> prefeiturasAtualizadas = new List<Prefeitura>();
    List<Prefeitura> prefeiturasAtualizadas24hrs = new List<Prefeitura>();
    List<Prefeitura> prefeiturasDesatualizadas = new List<Prefeitura>();
    List<Prefeitura> prefeiturasDesatualizadasMaisDeUmaSemana = new List<Prefeitura>();
    List<Grafico> graficoCircularPrefeiturasDesatualizadas = new List<Grafico>();

    double prefeiturasAtualizadasCount = 0,
    prefeiturasAtualizadasUltimas24hrsCount = 0,
    prefeiturasDesatualizadasCount = 0,
    prefeiturasDesatualizadasMaisDeUmaSemanaCount = 0;

    string tituloListaDePrefeituras;

    IEnumerable<Prefeitura> filtro;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            prefeituras = await PrefeituraServico.TodasPrefeituras();

            filtro = await PreencherTabelaPrincipalPrefeituras(prefeituras);
        }
        catch (Exception)
        {
            throw;
        }
    }

    public async Task<IEnumerable<Prefeitura>> PreencherTabelaPrincipalPrefeituras(IEnumerable<Prefeitura> prefeituras)
    {
        List<Prefeitura> listaPrefeituras = new List<Prefeitura>();

        foreach (var item in prefeituras)
        {
            if (item.situacao == "4")
            {
                listaPrefeituras.Add(item);
                tituloListaDePrefeituras = "Desatualizadas a mais de uma semana";
                prefeiturasDesatualizadasMaisDeUmaSemana.Add(item);
                prefeiturasDesatualizadasMaisDeUmaSemanaCount++;
            }
            if (item.situacao == "3")
            {
                listaPrefeituras.Add(item);
                tituloListaDePrefeituras = "Desatualizadas";
                prefeiturasDesatualizadas.Add(item);
                prefeiturasDesatualizadasCount++;
            }
            if (item.situacao == "2")
            {
                listaPrefeituras.Add(item);
                tituloListaDePrefeituras = "Atualizadas nas últimas 24Hrs";
                prefeiturasAtualizadas24hrs.Add(item);
                prefeiturasAtualizadasUltimas24hrsCount++;
            }
            if (item.situacao == "1")
            {
                listaPrefeituras.Add(item);
                tituloListaDePrefeituras = "Atualizadas";
                prefeiturasAtualizadas.Add(item);
                prefeiturasAtualizadasCount++;
            }
        }

        graficoCircularPrefeiturasDesatualizadas.Add(new Grafico() { texto = "Atualizadas", valores = prefeiturasAtualizadasCount });
        graficoCircularPrefeiturasDesatualizadas.Add(new Grafico() { texto = "Atualizadas Últimas 24hrs", valores = prefeiturasAtualizadasUltimas24hrsCount });
        graficoCircularPrefeiturasDesatualizadas.Add(new Grafico() { texto = "Desatualizadas", valores = prefeiturasDesatualizadasCount });
        graficoCircularPrefeiturasDesatualizadas.Add(new Grafico() { texto = "Desatualizadas a mais de uma semana", valores = prefeiturasDesatualizadasMaisDeUmaSemanaCount });

        return listaPrefeituras;
    }
}