@page "/Configuracoes"
@using Model
@using Interfaces
@inject IConfiguracaoServico ConfiguracaoServico

<div class="row">
    <div class="col-md-12">
        <div class="card">
            <h5 class="card-header">Configurações das páginas</h5>
            <div class="card-body">
                <div class="col-xl-6">
                    <RadzenNumeric TValue="int" Format="@teste()" Change=@(args => OnChange(args, "Numeric")) />
                </div>
                <div class="col-xl-6" style="margin-top:10px">
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    int? value;

    Configuracao configuracao = new Configuracao();

    double dblValue = 0.0;

    public string teste()
    {
        return ConfiguracaoServico.ConfiguracaoAtual().ToString();
    }

    void OnChange(dynamic value, string name)
    {
        configuracao.tempoAtualizacao = value;
        ConfiguracaoServico.UpdateConfiguracao(configuracao);
    }

    protected override async Task OnInitializedAsync()
    {
        try
        {
        }
        catch (Exception e)
        {
            throw;
        }
    }

    //bool busy;

    //void OnClick(string buttonName)
    //{
    //}

    //async Task OnBusyClick()
    //{
    //    int teste = 0;
    //    OnChange(teste, "Numeric");
    //}
}
